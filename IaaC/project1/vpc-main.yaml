---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Main VPC for RSMS'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'VPC Parameters'
      Parameters:
      - ClassB
      - EnvName
Parameters:
  ClassB:
    Description: 'Class B of VPC (10.XXX.0.0/16)'
    Type: Number
    Default: 0
    ConstraintDescription: 'Must be in the range [0-255]'
    MinValue: 0
    MaxValue: 255
  EnvName:
    Description: Environment
    Type: String
    MinLength: '3'
    MaxLength: '5'
    Default: "dev"
    AllowedPattern: '^[a-zA-Z]{0,5}'
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Sub '10.${ClassB}.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Sub "RSMS-${EnvName}-VPC"
      - Key: CIDR
        Value: !Sub '10.${ClassB}.0.0/16'
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
      - Key: Name
        Value: !Sub '10.${ClassB}.0.0/16'
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  NAT:
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt
        - EIP
        - AllocationId
      SubnetId: !Ref CommonPublic1
  EIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  CommonPublic1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub '10.${ClassB}.0.0/24'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'Common Public Subnet-1'
  CommonPublic2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Sub '10.${ClassB}.1.0/24'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: 'Common Public Subnet-2'
  CommonPrivate:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub '10.${ClassB}.2.0/24'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'Common Private Subnet'
  RouteTablePublic:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'Common Public'
  RouteTablePrivate:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'Common Private'
  RouteTableAssociationCommonPublic1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref CommonPublic1
      RouteTableId: !Ref RouteTablePublic
  RouteTableAssociationCommonPublic2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref CommonPublic2
      RouteTableId: !Ref RouteTablePublic
  RouteTableAssociationCommonPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref CommonPrivate
      RouteTableId: !Ref RouteTablePrivate
  RouteTablePublicInternetRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
  PrivateNATRouteTableAssociation:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NAT
  NetworkAclPublic:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public
  SubnetNetworkAclAssociationCommonPublic1:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref CommonPublic1
      NetworkAclId: !Ref NetworkAclPublic
  SubnetNetworkAclAssociationCommonPublic2:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref CommonPublic2
      NetworkAclId: !Ref NetworkAclPublic
  NetworkAclEntryInPublicAllowAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: '0.0.0.0/0'
  NetworkAclEntryOutPublicAllowAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'
Outputs:
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  VPC:
    Description: 'VPC'
    Value: !Ref VPC
    Export:
      Name: !Sub "RSMS-${EnvName}-VPCID"
  CidrBlock:
    Description: 'The set of IP addresses for the VPC.'
    Value: !GetAtt 'VPC.CidrBlock'
    Export:
      Name: !Sub 'RSMS-${EnvName}-CidrBlock'
  CidrCommonPublic1:
    Description: 'CIDR of Common Public Subnet'
    Value: !Sub '10.${ClassB}.0.0/24'
    Export:
      Name: !Sub "RSMS-${EnvName}-CidrCommonPublic1"
  CidrCommonPublic2:
    Description: 'CIDR of Common Public Subnet'
    Value: !Sub '10.${ClassB}.1.0/24'
    Export:
      Name: !Sub "RSMS-${EnvName}-CidrCommonPublic2"
  CidrCommonPrivate:
    Description: 'CIDR of Common Private Subnet'
    Value: !Sub '10.${ClassB}.2.0/24'
    Export:
      Name: !Sub "RSMS-${EnvName}-CidrCommonPrivate"
  SubnetPublic1:
    Description: 'Common Public subnet1 subnet id'
    Value: !Ref CommonPublic1
    Export:
      Name: !Sub "RSMS-${EnvName}-CommonPublicSubnet1"
  SubnetPublic2:
    Description: 'Common Public subnet2 subnet id'
    Value: !Ref CommonPublic2
    Export:
      Name: !Sub "RSMS-${EnvName}-CommonPublicSubnet2"
  SubnetPrivate:
    Description: 'Common Private Subnet subnet id'
    Value: !Ref CommonPrivate
    Export:
      Name: !Sub "RSMS-${EnvName}-CommonPrivateSubnet"
  RouteTablesPublic:
    Description: 'Route table public'
    Value: !Ref RouteTablePublic
    Export:
      Name: !Sub "RSMS-${EnvName}-RouteTablePublic"
  RouteTablesPrivate:
    Description: 'Route table private'
    Value: !Ref RouteTablePrivate
    Export:
      Name: !Sub "RSMS-${EnvName}-RouteTablePrivate"
